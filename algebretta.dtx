% !TeX document-id = {89af5c99-bdf0-4b07-b929-678eeeff7c5c}
% \iffalse meta-comment
% !TEX program  = pdfLaTeX
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
Algebretta
E-mail: claducATgmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------
Gestione dei polinomi e altro in esami
%</readme>
% 
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
\expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------
Algebretta
E-mail: claducATgmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

\endpreamble
\postamble

Copyright (C) 2022 by Claudio Duchi

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License (LPPL), either
version 1.3c of this license or (at your option) any later
version.  The latest version of this license is in the file:

https://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) by
You.

This work consists of the file  algebretta.dtx
and the derived files           algebretta.ins,
algebretta.pdf and
algebretta.sty.

\endpostamble
\usedir{tex/latex/algebretta}
\generate{
	\file{\jobname.sty}{\from{\jobname.dtx}{package}}
}
%</install>
%<install>\endbatchfile
%<*internal>
\usedir{source/latex/algebretta}
\generate{
	\file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\usedir{doc/latex/algebretta}
\generate{
	\file{README.txt}{\from{\jobname.dtx}{readme}}
}
\ifx\fmtname\nameofplainTeX
\expandafter\endbatchfile
\else
\expandafter\endgroup
\fi
%</internal>
%<*package>
\NeedsTeXFormat{LaTeX2e}[1994/06/01]
\ProvidesPackage{algebretta}
[2022/06/28 v3.0 creazione di binomi e trinomi]
%</package>
%<*driver>
\documentclass{ltxdoc}
\usepackage[T1]{fontenc}
\usepackage{lmodern}
\usepackage[italian]{babel}
\usepackage{\jobname}
\usepackage[numbered]{hypdoc}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\usepackage{imakeidx}
\makeindex 
\GlossaryPrologue{\section*{Changelog}}
\begin{document}
	\DocInput{\jobname.dtx}
	\PrintIndex
\end{document}
%</driver>
% \fi
%
%\GetFileInfo{\jobname.sty}
%
%\title{^^A
	%  \textsf{Algebretta} 
	%}
%\author{^^A
	%  Claudio Duchi^^A
	%^^A
	%^^A
	%E-mail: claducATgmail.com^^A
	%}
%\date{Released \filedate}
%
%\maketitle
%
%\changes{v1.0}{2022/06/19}{First public release}
%\changes{v1.1}{2022/06/20}{First public release}
%\changes{v2.0}{2022/06/22}{Aggiunto pgfkeys}
%\changes{v3.0}{2022/06/28}{Aggiunto aggiunti parametri ingresso e gestione 
%errori}
%\tableofcontents
%\section{Introduzione}
%Algebretta nasce come supporto ad esami. Pacchetto per la gestione delle prove 
%di verifica. 
%\section{Uso di algebretta}
% Per utilizzare algebretta basta porre
% \iffalse
%<*verb>
% \fi
\begin{verbatim}
\usepackage[options]{algebretta}
\end{verbatim}
% \iffalse
%</verb>
% \fi
%le opzioni sono
%
%\oarg{} nessun controllo
%
%\oarg{warning} gli errori vengono messi nel log e la compilazione non è 
%interrotta
%
%\oarg{debug} gli errori vengono messi nel log e la compilazione  è interrotta
%\section{Funzioni base}
%\DescribeMacro{\binomio}
%Comando per scrivere un binomio $ax+b$ non dotato di parentesi. Non viene 
%%%fatto nessun controllo su i parametri.
%
%\cs{binomio}
%\marg{a}
%\marg{b}
%
%Esempio
%
% \iffalse
%<*verb>
% \fi
\begin{verbatim}
\binomio{10}{1}
\end{verbatim}
% \iffalse
%</verb>
% \fi
%$10x+1$
%
%
% \iffalse
%<*verb>
% \fi
\begin{verbatim}
\binomio{1}{1}
\end{verbatim}
% \iffalse
%</verb>
% \fi
%$x+1$
%
%
% \iffalse
%<*verb>
% \fi
\begin{verbatim}
\binomio{-10}{1}
\end{verbatim}
% \iffalse
%</verb>
% \fi
%$1-10x$
%
%\DescribeMacro{\binomiop}
%Comando per scrivere un binomio $(ax+b)$ dotato di parentesi. Non viene fatto 
%%%nessun controllo su i parametri.
%
%\cs{binomio}
%\marg{a}
%\marg{b}
%
%
% \iffalse
%<*verb>
% \fi
\begin{verbatim}
\binomiop{10}{1}
\end{verbatim}
% \iffalse
%</verb>
% \fi
%$(10x+1)$
%
%
% \iffalse
%<*verb>
% \fi
\begin{verbatim}
\binomio{-10}{1}
\end{verbatim}
% \iffalse
%</verb>
% \fi
%$1-10x$
%
%\DescribeMacro{\sommadifferenza}
%Comando per scrivere una somma per differenza $(ax+b)(ax-b)$ dotato di 
%parentesi. . Non viene fatto nessun controllo su i parametri. 
%
%\cs{sommadifferenza}
%\marg{a}
%\marg{b}
%
%\DescribeMacro{\trimonioSecGrad}
% Comando per scrivere un trinomio di secondo grado $ax^2+bx+c$ non dotato di 
%parentesi 
% 
%
%\cs{newtrinomio}
%\marg{a}
%\marg{b}
%\marg{c}
%
%\DescribeMacro{\newtrimonioSecGrad}
% Comando per scrivere un trinomio di secondo grado $ax^2+bx+c$ non dotato di 
%parentesi 
% 
%
%\cs{newtrinomio}
%\marg{a}
%\marg{b}
%\marg{c}
%\marg{z}
%
% Il quarto parametro (da 0 a 5) scrive il trinomio secondo la codifica   
% la seguente
%
%\begin{center}
%	\begin{tabular}{lc}
%   z&codifica\\ 
%	0& abc	  \\
%	1& acb	 \\
%	2& bac	 \\
%	3& bca	  \\
%	4& cab	 \\
%	5& cba \\
%	\end{tabular}
%\end{center}
%
%\DescribeMacro{\verso}
%Comando per scrivere il verso codificato
%
%\cs{verso}
%\marg{x}
%
%\begin{center}
%\begin{tabular}{lc}
%	x&Verso  \\
%	0&$>$  \\
%	1& $<$ \\
%	2&$\geq$  \\
%	3&$\leq$  \\
%\end{tabular}
%\end{center}
%
%\DescribeMacro{\mult}
%Comando per scrivere un numero
%
%\cs{mult}
%\marg{x}
%
%\begin{center}
%	\begin{tabular}{lc}
%	x & stampa \\
%	$+1$ & $+$ \\
%	$-1$ & $-$ \\
%	$2$ & $+2$ \\
%	$-2$ &$-2$ \\
%\end{tabular}
%\end{center}
%
%\DescribeMacro{\rettaimplicita}
%Comando per scrivere la retta in forma  implicita
% $ax+by+c=0$
%
%\cs{rettaimplicita}
%\marg{a}
%\marg{b}
%\marg{c}
%
%\DescribeMacro{\rettaesplicita}
%Comando per scrivere la retta in forma  esplicita
% $y=mx+q$
%
%\cs{rettaesplicita}
%\marg{m}
%\marg{q}
%
%\section{Uso di pgfkeys}
%
%\DescribeMacro{\pbinomio}
%Comando per scrivere un binomio nella forma 
% $ax+by$
%
%Se $a$ o $b$ sono zero non viene stampato nulla
%
%\cs{pbinomio}
%\oarg{pbinc=a, sbinc=b}
%\marg{a}
%\marg{b}
%
%Esempi
%
% \iffalse
%<*verb>
% \fi
\begin{verbatim}
$\pbinomio[pbinc=a^2, sbinc=z]{-2}{3}+\pbinomio{1}{-3}$
\end{verbatim}
% \iffalse
%</verb>
% \fi
%$\pbinomio[pbinc=a^2, sbinc=z]{-2}{3}+\pbinomio{1}{-3}$
%
%
%\DescribeMacro{\pbinomios}
%Comando per scrivere un binomio nella forma 
% $ax+b$
%
%Se $a$ o $b$ sono zero non viene stampato nulla
%
%\cs{pbinomio}
%\oarg{pbinc=x}
%\marg{a}
%\marg{b}
%
%Esempi
%
% \iffalse
%<*verb>
% \fi
\begin{verbatim}
$\pbinomios[pbinc=a^2]{-2}{3}+\pbinomios{1}{-3}$
\end{verbatim}
% \iffalse
%</verb>
% \fi
%$\pbinomios[pbinc=a^2]{-2}{3}+\pbinomios{1}{-3}$
%
%
%\DescribeMacro{\ptrinomio}
%Comando per scrivere un binomio nella forma 
% $ax+by+cz$
%
%Se $a$, $b$ o $c$ sono zero non viene stampato nulla
%
%\cs{ptrinomio}
%\oarg{ptinc = x, stinc = y, ttinc = z}
%\marg{a}
%\marg{b}
%\marg{c}
%
%Esempi
% $\ptrinomio{1}{-3}{1}\ptrinomio[ptinc=a]{-1}{3}{-1}$
%
% $\ptrinomio{1}{-3}{1}\ptrinomio[ptinc=a]{-1}{3}{-1}$
%
% $\ptrinomio[ptinc=a, ttinc=b]{-1}{3}{1}$
%
%
%\DescribeMacro{\ptrinomiop}
%Comando per scrivere un binomio nella forma 
% $(ax+by+cz)$
%
%Se $a$, $b$ o $c$ sono zero non viene stampato nulla
%
%\cs{ptrinomiop}
%\oarg{ptinc = x, stinc = y, ttinc = z}
%\marg{a}
%\marg{b}
%\marg{c}
%
%\DescribeMacro{\ptrinomios}
%Comando per scrivere un binomio nella forma 
% $ax+by+c$
%
%Se $a$, $b$ o $c$ sono zero non viene stampato nulla
%
%\cs{ptrinomios}
%\oarg{ptinc = x, stinc = y}
%\marg{a}
%\marg{b}
%\marg{c}
%
%Esempi
%
% $\ptrinomios{1}{-3}{1}\ptrinomios[stinc=a]{-1}{3}{-1}$
%
%$\ptrinomios[ptinc=a, stinc=b]{-1}{3}{1}$
% 
%
%\DescribeMacro{\ptrinomiosp}
%Comando per scrivere un binomio nella forma 
% $(ax+by+c)$
%
%Se $a$, $b$ o $c$ sono zero non viene stampato nulla
%
%\cs{ptrinomiosp}
%\oarg{ptinc = x, stinc = y}
%\marg{a}
%\marg{b}
%\marg{c}
%
%
%\DescribeMacro{\ptrisgabc}
%Comando per scrivere un trinomio di secondo grado nella forma 
% $ax^2+bx+c$
%
%Se $b$ o $c$ sono zero non viene stampato nulla. Se $a$ è zero, 
%in modalita warning o 
%debug viene dato un messaggio di errore
%
%\cs{ptrisgabc}
%\oarg{ptinc = x}
%\marg{a}
%\marg{b}
%\marg{c}
%
%
%\DescribeMacro{\ptrisgacb}
%Comando per scrivere un trinomio di secondo grado nella forma 
% $ax^2+c+bx$
%
%Se $b$ o $c$ sono zero non viene stampato nulla. Se $a$ è zero, 
%in modalita warning o 
%debug viene dato un messaggio di errore
%
%\cs{ptrisgacb}
%\oarg{ptinc = x}
%\marg{a}
%\marg{b}
%\marg{c}
%
%
%\DescribeMacro{\ptrisgbac}
%Comando per scrivere un trinomio di secondo grado nella forma 
% $bx+ax^2+c$
%
%Se $b$ o $c$ sono zero non viene stampato nulla. Se $a$ è zero, 
%in modalita warning o 
%debug viene dato un messaggio di errore
%
%\cs{ptrisgbac}
%\oarg{ptinc = x}
%\marg{a}
%\marg{b}
%\marg{c}
%
%
%\DescribeMacro{\ptrisgcab}
%Comando per scrivere un trinomio di secondo grado nella forma 
% $c+ax^2+bx$
%
%Se $b$ o $c$ sono zero non viene stampato nulla. Se $a$ è zero, 
%in modalita warning o 
%debug viene dato un messaggio di errore
%
%\cs{ptrisgcab}
%\oarg{ptinc = x}
%\marg{a}
%\marg{b}
%\marg{c}
%
%
%\DescribeMacro{\ptrisgcba}
%Comando per scrivere un trinomio di secondo grado nella forma 
% $c+bx+ax^2$
%
%Se $b$ o $c$ sono zero non viene stampato nulla. Se $a$ è zero, 
%in modalita warning o 
%debug viene dato un messaggio di errore
%
%\cs{ptrisgcba}
%\oarg{ptinc = x}
%\marg{a}
%\marg{b}
%\marg{c}
%
%
%\DescribeMacro{\ptrisgbca}
%Comando per scrivere un trinomio di secondo grado nella forma 
% $bx+c+ax^2$
%
%Se $b$ o $c$ sono zero non viene stampato nulla. Se $a$ è zero, 
%in modalita warning o 
%debug viene dato un messaggio di errore
%
%\cs{ptrisgbca}
%\oarg{ptinc = x}
%\marg{a}
%\marg{b}
%\marg{c}
%
%
%\DescribeMacro{\ptrisgm}
% Comando per scrivere un trinomio di secondo grado $ax^2+bx+c$ non dotato di 
%parentesi 
%
%Se $b$ o $c$ sono zero non viene stampato nulla. Se $a$ è zero, 
%in modalita warning o 
%debug viene dato un messaggio di errore
%
%\cs{ptrisgm}
%\oarg{ptinc = x, stinc = y}
%\marg{a}
%\marg{b}
%\marg{c}
%\marg{z}
%
% Il quarto parametro (da 0 a 5) scrive il trinomio secondo la codifica   
% la seguente
%
%\begin{center}
	%	\begin{tabular}{lc}
		%   z&codifica\\ 
		%	0& abc	  \\
		%	1& acb	 \\
		%	2& bac	 \\
		%	3& bca	  \\
		%	4& cab	 \\
		%	5& cba \\
		%	\end{tabular}
	%\end{center}
%
%\section{Equazioni di secondo grado}
%\DescribeMacro{\ptrispq}
%Comando per scrivere una equazione di secondo grado nella forma 
%
% $px^2+(p+q)x+q=0$
%
%$x=-1\vee x=-\dfrac{p}{q}$
%
% Se $p$ è zero, 
%in modalita warning o 
%debug viene dato un messaggio di errore
%
%\cs{ptrispq}
%\oarg{ptinc = x}
%\marg{p}
%\marg{q}
%
%\DescribeMacro{\ptrisgphi}
%Comando per scrivere una equazione di secondo grado nella forma 
%
% $x^2+ax-a^2$
%
%$x=-a\left(\dfrac{1+\sqrt{5}}{2}\right)\vee$ 
%$x=a\left(\dfrac{1-\sqrt{5}}{2}\right)$
%
%\cs{ptrisgphi}
%\oarg{ptinc = x}
%\marg{a}
%
%
%\StopEventually{^^A
%  \newpage
%  \PrintChanges
%  \PrintIndex
%}
%
%\section{Codice}
%<*package>
%    \begin{macrocode}
\RequirePackage{etoolbox}
\RequirePackage{amsmath}
\RequirePackage{amssymb}
\RequirePackage[nomessages]{fp}
\RequirePackage{pgfkeys}
\pgfkeys{/myerrori/.is family, /myerrori,
	default/.style = 
	{
		erroreuno =\space il parametro uno di pbinomio è zero,
		erroredue =\space il parametro due  pbinomio è zero,
		erroretre =\space il parametro $a$ è zero,
	},
	erroreuno/.estore in = \Errore@uno,
	erroredue/.estore in = \Errore@due,
	erroretre/.estore in = \Errore@tre,
}
\newcommand{\errore}[1]{}

\DeclareOption{warning}{\renewcommand{\errore}[1]{\PackageWarning{errori}{#1}}}
\DeclareOption{debug}{\renewcommand{\errore}[1]{\PackageError{errori}{#1}{}}}
\DeclareOption*{\PackageWarning{errori}{Il parametro ‘\CurrentOption’ è 
		sconosciuto}}
\ProcessOptions\relax
\pgfkeys{
	/mybinomio/.is family, /mybinomio,
	default/.style =
	{pbinc = x, sbinc = y},
	pbinc/.estore in = \mybinoA,
	sbinc/.estore in = \mybinoB,
	/mytrinomio/.is family, /mytrinomio,
	default/.style =
	{ptinc = x, stinc = y, ttinc = z},
	ptinc/.estore in = \mytrioA,
	stinc/.estore in = \mytrioB,
	ttinc/.estore in = \mytrioC,
	/mytrinomios/.is family, /mytrinomios,
	default/.style =
	{ptinc = x, stinc = y},
	ptinc/.estore in = \mytrioA,
	stinc/.estore in = \mytrioB,
	/mytrinomiosecondog/.is family, /mytrinomiosecondog,
	default/.style = 
	{ptinc = x},
	ptinc/.estore in = \mytrioA,
}
%    \end{macrocode}
%    \begin{macrocode}
\newcommand{\parte@Abin}[1]{\ifnumcomp{#1}{>}{0}
	{\ifnumcomp{#1}{=}{1}{x}{#1x}}{\ifnumcomp{#1}{=}{-1}{-x}{#1x}}}
\newcommand{\parte@Bbin}[1]{\ifnumcomp{#1}{>}{0}{+#1}{#1}}
%    \end{macrocode}
%\begin{macro}{\binomio}
%\changes{v1.0}{2022/06/21}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\binomio}[2]{\ifnumcomp{#1}{>}{0}
	{\parte@Abin{#1}\parte@Bbin{#2}}{#2\parte@Abin{#1}}}
%    \end{macrocode}
%\end{macro}
%
%\begin{macro}{\binomiop}
%\changes{v1.0}{2022/06/21}{Versione iniziale}
%    \begin{macrocode}
		\newcommand{\binomiop}[2]{\ifnumcomp{#1}{>}{0}
			{(\parte@Abin{#1}\parte@Bbin{#2})}{(#2\parte@Abin{#1})}}
%    \end{macrocode}
%\end{macro}
%
%\begin{macro}{\sommadifferenza}
%\changes{v1.1}{2022/06/22}{Aggiunto fp}
%    \begin{macrocode}
\newcommand{\sommadifferenza}[2]{
	\FPeval\b{(#2)*(-1)}%
	\FPeval\b{round(b:0)}%   
	\binomiop{#1}{\b}\binomiop{#1}{#2}}
%    \end{macrocode}
%\end{macro}
%
%    \begin{macrocode}
\newcommand{\parte@AtriSecabc}[1]{\ifnumequal{#1}{0}{\message{a=0}\stop}%
	{\ifnumcomp{#1}{>}{0}{\ifnumequal{#1}{1}
			{x^{2}}{#1x^{2}}}%
		{\ifnumequal{#1}{-1}{-x^{2}}{#1x^{2}}}}}
\newcommand{\parte@BtriSecabc}[1]{%
	\ifnumequal{#1}{0}{}{\ifnumgreater{#1}{0}{\ifnumequal{#1}{1}{+x}{+#1x}}
		{\ifnumequal{#1}{-1}{-x}{#1x}}}%
}
\newcommand{\parte@CtriSecabc}[1]{%
	\ifnumequal{#1}{0}{}{\ifnumgreater{#1}{0}{+#1}{#1}}%
}
\newcommand{\parte@AtriSecbac}[1]{\ifnumequal{#1}{0}{\message{a=0}\stop}%
	{\ifnumcomp{#1}{>}{0}{\ifnumequal{#1}{1}
			{+x^{2}}{+#1x^{2}}}%
		{\ifnumequal{#1}{-1}{-x^{2}}{#1x^{2}}}}}
\newcommand{\parte@BtriSecbac}[1]{%
	\ifnumequal{#1}{0}{}{\ifnumgreater{#1}{0}{\ifnumequal{#1}{1}{x}{#1x}}
		{\ifnumequal{#1}{-1}{-x}{#1x}}}%
}
\newcommand{\parte@CtriSeccab}[1]{%
	\ifnumequal{#1}{0}{}{\ifnumgreater{#1}{0}{#1}{#1}}%
}
%    \end{macrocode}
%\begin{macro}{\newtrinomioSecGrad}
%\changes{v1.0}{2022/06/21}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\newtrinomioSecGrad}[4]{%
	\ifcase #4%
	\parte@AtriSecabc{#1}\parte@BtriSecabc{#2}\parte@CtriSecabc{#3}%1 abc
	\or
	\parte@AtriSecabc{#1}\parte@CtriSecabc{#3}\parte@BtriSecabc{#2}%2 acb
	\or
	\parte@BtriSecbac{#2}\parte@AtriSecbac{#1}\parte@CtriSecabc{#3}%3 bac
	\or
	\parte@BtriSecbac{#2}\parte@CtriSecabc{#3}\parte@AtriSecbac{#1}%4 bca
	\or
	\parte@CtriSeccab{#3}\parte@AtriSecbac{#1}\parte@BtriSecabc{#2}%5 cab
	\or
	\parte@CtriSeccab{#3}\parte@BtriSecabc{#2}\parte@AtriSecbac{#1}%6 cba
	\fi
}%
%    \end{macrocode}
%\end{macro}
%
%\begin{macro}{\trimonioSecGrad}
%\changes{v1.0}{2022/06/21}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\parte@AtriSec}[1]{\ifnumequal{#1}{0}{\message{a=0}\stop}%
	{\ifnumcomp{#1}{>}{0}{\ifnumequal{#1}{1}%
			{x^{2}}{#1x^{2}}}%
		{\ifnumequal{#1}{-1}{-x^{2}}{#1x^{2}}}}}%
\newcommand{\parte@BtriSec}[1]{%
	\ifnumequal{#1}{0}{}{\ifnumgreater{#1}{0}{\ifnumequal{#1}{1}{+x}{+#1x}}
		{\ifnumequal{#1}{-1}{-x}{#1x}}}%
}
\newcommand{\parte@CtriSec}[1]{%
	\ifnumequal{#1}{0}{}{\ifnumgreater{#1}{0}{+#1}{#1}}%
}
\newcommand{\trimonioSecGrad}[3]{\parte@AtriSec{#1}\parte@BtriSec{#2}\parte@CtriSec{#3}}%
%    \end{macrocode}
%\end{macro}
%
%\begin{macro}{\verso}
%\changes{v1.0}{2022/06/21}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\verso}[1]{
\ifcase #1%
>
\or
<
\or
\geq
\or
\leq
\fi
}
%    \end{macrocode}
%\end{macro}
%
%\begin{macro}{\mult}
%\changes{v1.0}{2022/06/21}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\mult}[1]{%
\ifnumequal{#1}{0}{\PackageError{algebretta}{$a$ è zero}}{%
\ifnumcomp{#1}{>}{0}{\ifnumequal{#1}{1}{+}{+#1}}%
{\ifnumequal{#1}{-1}{-}{#1}}}}%
%    \end{macrocode}
%\end{macro}
%
%    \begin{macrocode}
\newcommand{\parte@Arettaimplicita}[1]{
	\ifnumequal{#1}{0}{}{
		\ifnumgreater{#1}{0}{
			\ifnumequal{#1}{1}{x}{#1x}}{
			\ifnumequal{#1}{-1}{-x}{#1x}}}}
\newcommand{\parte@BrettaimplicitaA}[1]{
	\ifnumequal{#1}{0}{}{
	\ifnumgreater{#1}{0}{
	\ifnumequal{#1}{1}{y}{+#1y}}{
	\ifnumequal{#1}{-1}{-y}{#1y}}}}
\newcommand{\parte@BrettaimplicitaB}[1]{
	\ifnumequal{#1}{0}{}{
		\ifnumgreater{#1}{0}{
			\ifnumequal{#1}{1}{+y}{+#1y}}{
			\ifnumequal{#1}{-1}{-y}{#1y}}}}
\newcommand{\parte@Crettaimplicita}[1]{
	\ifnumequal{#1}{0}{}{
	\ifnumgreater{#1}{0}{+#1}{#1}}}
%    \end{macrocode}
%\begin{macro}{\rettaimplicita}
%\changes{v1.0}{2022/06/21}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\rettaimplicita}[3]{\parte@Arettaimplicita{#1}
	\ifnumequal{#1}{0}{\parte@BrettaimplicitaA{#2}}{\parte@BrettaimplicitaB{#2}}
	\parte@Crettaimplicita{#3}=0}
%    \end{macrocode}
%\end{macro}
%
%\begin{macro}{\rettaesplicita}
%\changes{v1.0}{2022/06/21}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\rettaesplicita}[2]{y=\parte@Arettaimplicita{#1}\parte@Crettaimplicita{#2}}
%    \end{macrocode}
%\end{macro}
%
%\begin{macro}{\pbinomio}
%\changes{v1.0}{2022/06/24}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\pbinomio}[3][]{
	\pgfkeys{/mybinomio, default, #1}%
	\ifnumequal{#2}{0}{\errore{\Errore@uno}}
	{\ifnumgreater{#2}{0}{\ifnumequal{#2}{1}{\mybinoA}{#2\mybinoA}}{\ifnumequal{#2}{-1}{-\mybinoA}{#2\mybinoA}}}
	\ifnumequal{#3}{0}{\errore{\Errore@due}}{
		\ifnumgreater{#3}{0}{\ifnumequal{#3}{1}{+\mybinoB}{+#3\mybinoB}}{\ifnumequal{#3}{-1}{-\mybinoB}{#3\mybinoB}}}
}
%    \end{macrocode}
%\end{macro}
%
%
%
%\begin{macro}{\pbinomios}
%\changes{v1.0}{2022/06/24}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\pbinomios}[3][]{
	\pgfkeys{/mybinomio, default, #1}%
	\ifnumequal{#2}{0}{\errore{\Errore@uno}}
	{\ifnumgreater{#2}{0}{\ifnumequal{#2}{1}{\mybinoA}{#2\mybinoA}}{\ifnumequal{#2}{-1}{-\mybinoA}{#2\mybinoA}}}
	\ifnumequal{#3}{0}{\errore{\Errore@due}}{
		\ifnumgreater{#3}{0}{+#3}{#3}}}
%    \end{macrocode}
%\end{macro}
%
%
%
%\begin{macro}{\pbinomiop}
%\changes{v1.0}{2022/06/24}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\pbinomiop}[3][]{
	\pgfkeys{/mybinomio, default, #1}%
	(\pbinomio[#1]{#2}{#3})
}
%    \end{macrocode}
%\end{macro}
%
%
%\begin{macro}{\ptrinomio}
%\changes{v1.0}{2022/06/25}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\ptrinomio}[4][]{
	\pgfkeys{/mytrinomio, default, #1}%
	\ifnumequal{#2}{0}{}{
		\ifnumgreater{#2}{0}{\ifnumequal{#2}{1}{\mytrioA}{#2\mytrioA}}{\ifnumequal{#2}{-1}{-\mytrioA}{#2\mytrioA}}}
	\ifnumequal{#3}{0}{}{
		\ifnumgreater{#3}{0}{\ifnumequal{#3}{1}{+\mytrioB}{+#3\mytrioB}}{\ifnumequal{#3}{-1}{-\mytrioB}{#3\mytrioB}}}
	\ifnumequal{#4}{0}{}{
		\ifnumgreater{#4}{0}{\ifnumequal{#4}{1}{+\mytrioC}{+#4\mytrioC}}{\ifnumequal{#4}{-1}{-\mytrioC}{#4\mytrioC}}}
}
%    \end{macrocode}
%\end{macro}
%
%
%\begin{macro}{\ptrinomios}
%\changes{v1.0}{2022/06/25}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\ptrinomios}[4][]{
	\pgfkeys{/mytrinomios, default, #1}%
	\ifnumequal{#2}{0}{}{
		\ifnumgreater{#2}{0}{\ifnumequal{#2}{1}{\mytrioA}{#2\mytrioA}}{\ifnumequal{#2}{-1}{-\mytrioA}{#2\mytrioA}}}
	\ifnumequal{#3}{0}{}{\ifnumgreater{#3}{0}{\ifnumequal{#3}{1}{+\mytrioB}{+#3\mytrioB}}{\ifnumequal{#3}{-1}{-\mytrioB}{#3\mytrioB}}}
	\ifnumequal{#4}{0}{}{\ifnumgreater{#4}{0}{+#4}{#4}}
}
%    \end{macrocode}
%\end{macro}
%
%
%\begin{macro}{\ptrinomiop}
%\changes{v1.0}{2022/06/25}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\ptrinomiop}[4][]{
	\pgfkeys{/mytrinomio, default, #1}%
	(\ptrinomio[#1]{#2}{#3}{#4})
}
%    \end{macrocode}
%\end{macro}
%
%
%
%\begin{macro}{\ptrinomiosp}
%\changes{v1.0}{2022/06/25}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\ptrinomiosp}[4][]{
	\pgfkeys{/mytrinomios, default, #1}%
	(\ptrinomios[#1]{#2}{#3}{#4})
}
%    \end{macrocode}
%\end{macro}
%
%\begin{macro}{\ptrisgabc}
%\changes{v1.0}{2022/06/29}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\ptrisgabc}[4][]{
	\pgfkeys{/mytrinomiosecondog, default, #1}%
	\pgfkeys{/myerrori, default}%
	\ifnumequal{#2}{0}{\errore{\Errore@tre}}{\ifnumequal{#2}{1}{\mytrioA^{2}}
		{\ifnumequal{#2}{-1}{-\mytrioA^{2}}{#2\mytrioA^{2}}}}
	\ifnumequal{#3}{0}{}{\ifnumequal{#3}{1}{+\mytrioA}
		{\ifnumequal{#3}{-1}{-\mytrioA}{\ifnumgreater{#3}{0}{+#3\mytrioA}{#3\mytrioA}}}}
	\ifnumequal{#4}{0}{}{\ifnumgreater{#4}{0}{+#4}{#4}}
}
%    \end{macrocode}
%\end{macro}
%
%
%\begin{macro}{\ptrisgacb}
%\changes{v1.0}{2022/06/29}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\ptrisgacb}[4][]{
	\pgfkeys{/mytrinomiosecondog, default, #1}%
	\pgfkeys{/myerrori, default}%
	\ifnumequal{#2}{0}{\errore{\Errore@tre}}{\ifnumequal{#2}{1}{\mytrioA^{2}}
		{\ifnumequal{#2}{-1}{-\mytrioA^{2}}{#2\mytrioA^{2}}}}
	\ifnumequal{#4}{0}{}{\ifnumgreater{#4}{0}{+#4}{#4}}
	\ifnumequal{#3}{0}{}{\ifnumequal{#3}{1}{+\mytrioA}
		{\ifnumequal{#3}{-1}{-\mytrioA}{\ifnumgreater{#3}{0}{+#3\mytrioA}{#3\mytrioA}}}}
}
%    \end{macrocode}
%\end{macro}
%
%
%\begin{macro}{\ptrisgbac}
%\changes{v1.0}{2022/06/29}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\ptrisgbac}[4][]{
	\pgfkeys{/mytrinomiosecondog, default, #1}%
	\pgfkeys{/myerrori, default}%
	\ifnumequal{#3}{0}{}{\ifnumequal{#3}{1}{\mytrioA}
		{\ifnumequal{#3}{-1}{-\mytrioA}{#3\mytrioA}}}
	\ifnumequal{#2}{0}{\errore{\Errore@tre}}{\ifnumequal{#2}{1}{+\mytrioA^{2}}
		{\ifnumequal{#2}{-1}{-\mytrioA^{2}}{+#2\mytrioA^{2}}}}
	\ifnumequal{#4}{0}{}{\ifnumgreater{#4}{0}{+#4}{#4}}
}
%    \end{macrocode}
%\end{macro}
%
%
%\begin{macro}{\ptrisgcab}
%\changes{v1.0}{2022/06/29}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\ptrisgcab}[4][]{
	\pgfkeys{/mytrinomiosecondog, default, #1}%
	\pgfkeys{/myerrori, default}%
	\ifnumequal{#4}{0}{}{#4}	
	\ifnumequal{#2}{0}{\errore{\Errore@tre}}{\ifnumequal{#2}{1}{+\mytrioA^{2}}
		{\ifnumequal{#2}{-1}{-\mytrioA^{2}}{+#2\mytrioA^{2}}}}
	\ifnumequal{#3}{0}{}{\ifnumequal{#3}{1}{+\mytrioA}
		{\ifnumequal{#3}{-1}{-\mytrioA}{\ifnumgreater{#3}{0}{+#3\mytrioA}{#3\mytrioA}}}}
}
%    \end{macrocode}
%\end{macro}
%
%
%\begin{macro}{\ptrisgcba}
%\changes{v1.0}{2022/06/29}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\ptrisgcba}[4][]{
	\pgfkeys{/mytrinomiosecondog, default, #1}%
	\pgfkeys{/myerrori, default}%
	\ifnumequal{#4}{0}{}{#4}	
	\ifnumequal{#3}{0}{}{\ifnumequal{#3}{1}{+\mytrioA}
		{\ifnumequal{#3}{-1}{-\mytrioA}{\ifnumgreater{#3}{0}{+#3\mytrioA}{#3\mytrioA}}}}
	\ifnumequal{#2}{0}{\errore{\Errore@tre}}{\ifnumequal{#2}{1}{+\mytrioA^{2}}
		{\ifnumequal{#2}{-1}{-\mytrioA^{2}}{+#2\mytrioA^{2}}}}
} 
%    \end{macrocode}
%\end{macro}
%
%
%\begin{macro}{\ptrisgbca}
%\changes{v1.0}{2022/06/29}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\ptrisgbca}[4][]{
	\pgfkeys{/mytrinomiosecondog, default, #1}%
	\pgfkeys{/myerrori, default}%
	\ifnumequal{#3}{0}{}{\ifnumequal{#3}{1}{\mytrioA}
		{\ifnumequal{#3}{-1}{-\mytrioA}{\ifnumgreater{#3}{0}{#3\mytrioA}{#3\mytrioA}}}}
	\ifnumequal{#4}{0}{}{\ifnumgreater{#4}{0}{+#4}{#4}}	
	\ifnumequal{#2}{0}{\errore{\Errore@tre}}{\ifnumequal{#2}{1}{+\mytrioA^{2}}
		{\ifnumequal{#2}{-1}{-\mytrioA^{2}}{+#2\mytrioA^{2}}}}
}
%    \end{macrocode}
%\end{macro}
%
%
%\begin{macro}{\ptrisgm}
%\changes{v1.0}{2022/06/29}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\ptrisgm}[5][]{%
	\ifcase #5%
	\ptrisgabc[#1]{#2}{#3}{#4}%0 abc
	\or
	\ptrisgacb[#1]{#2}{#3}{#4}%1 acb
	\or
	\ptrisgbac[#1]{#2}{#3}{#4}%2 bac
	\or
	\ptrisgbca[#1]{#2}{#3}{#4}%3 bca
	\or
	\ptrisgcab[#1]{#2}{#3}{#4}%4 cab
	\or
	\ptrisgcba[#1]{#2}{#3}{#4}%5 cba
	\fi
	\FPeval\resultaP{#3*#3-4*#2*#4}%
	\FPeval\resultaP{round(resultaP:0)}
	\PackageWarning{trisecg}{\FPprint‌\resultaP}
}%
%    \end{macrocode}
%\end{macro}
%
%
%\begin{macro}{\ptrispq}
%\changes{v1.0}{2022/06/29}{Versione iniziale}
%\changes{v1.1}{2022/06/30}{Corretto errore con fp se i parametri sono negativi}
%    \begin{macrocode}
\newcommand{\ptrisgpq}[3][]{
	\pgfkeys{/mytrinomiosecondog, default, #1}%
	\pgfkeys{/myerrori, default}%
	\FPeval\resultaP{(#2)+(#3)}%
	\FPeval\resultaP{round(resultaP:0)}
	\ptrisgabc[#1]{#2}{\resultaP}{#3}
}
%    \end{macrocode}
%\end{macro}
%
%
%\begin{macro}{\ptrisgphi}
%\changes{v1.0}{2022/06/30}{Versione iniziale}
%    \begin{macrocode}
\newcommand{\ptrisgphi}[2][]{%
	\pgfkeys{/mytrinomiosecondog, default, #1}%
	\pgfkeys{/myerrori, default}%
	\FPeval\resultaP{(-1)*(#2)*(#2)}%
	\FPeval\resultaP{round(resultaP:0)}
	\ptrisgabc[#1]{1}{#2}{\resultaP}
}
%    \end{macrocode}
%\end{macro}
%
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%\Finale
\endinput